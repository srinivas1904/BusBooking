server.port=8087

#Swagger path
springdoc.api-docs.path = /spmicroapi-openapi

## sql Database connection
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=Root@123
spring.datasource.url=jdbc:mysql://localhost:3306/bus_booking


# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
#spring.datasource.url=jdbc:mysql://localhost:3306/Bus?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=mypass123

#
#database.vendor=MYSQL
# Hibernate
#
#database.generateDdl=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
#
#database.driver=org.MySql.Driver
#JODA LocalDate
spring.jpa.properties.jadira.usertype.autoRegisterUserTypes = true

#Fare per km for various busTypes 
bus.acFare=10
bus.nonAcFare=8
bus.sittingAcFare =7
bus.sitting=6

#email configuration
spring.mail.host=smtp.gmail.com

 # SMTP server port
spring.mail.port=25
# Login used for authentication
spring.mail.username= ks.morliguda@gmail.com 
# Password for the given login
spring.mail.password= ******
spring.mail.protocol=smtp
 # Default message encoding
spring.mail.defaultEncoding=UTF-8

spring.mail.properties.mail.smtp.starttls.enable=true 
spring.mail.properties.mail.smtp.starttls.required=false
#server.port=8080
#show SQL statements generated by JPA/Hibernate
#
#database.showSql=false

spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

spring.datasource.driverClassName=com.mysql.jdbc.Driver

#auto create/update tables if necessary
spring.jpa.generate-ddl=true
#database vendor, for more options check out org.springframework.orm.jpa.vendor.Database
#database.vendor=POSTGRESQL

security.oauth2.resource.filter-order=3

flash.web.client.id=marketplace-app
flash.web.api.secret=mypass@123
app.base.url=http://localhost:8087
password.recovery.token.expiration.hours=24
#jdbc.driverClassName=com.mysql.jdbc.Driver
#oauth2 access-token expiry time in seconds
spring.accessToken.seconds=42000